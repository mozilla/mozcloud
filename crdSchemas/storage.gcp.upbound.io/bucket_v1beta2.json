{
  "description": "Bucket is the Schema for the Buckets API. Creates a new bucket in Google Cloud Storage.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BucketSpec defines the desired state of Bucket",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "autoclass": {
              "description": "The bucket's Autoclass configuration.  Structure is documented below.",
              "properties": {
                "enabled": {
                  "description": "While set to true, autoclass automatically transitions objects in your bucket to appropriate storage classes based on each object's access pattern.",
                  "type": "boolean"
                },
                "terminalStorageClass": {
                  "description": "The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Supported values include: NEARLINE, ARCHIVE.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "cors": {
              "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.",
              "items": {
                "properties": {
                  "maxAgeSeconds": {
                    "description": "The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.",
                    "type": "number"
                  },
                  "method": {
                    "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "origin": {
                    "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "responseHeader": {
                    "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "customPlacementConfig": {
              "description": "The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.",
              "properties": {
                "dataLocations": {
                  "description": "The list of individual regions that comprise a dual-region bucket. See Cloud Storage bucket locations for a list of acceptable regions. Note: If any of the data_locations changes, it will recreate the bucket.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "set"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "defaultEventBasedHold": {
              "description": "Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.",
              "type": "boolean"
            },
            "enableObjectRetention": {
              "description": "Enables object retention on a storage bucket.",
              "type": "boolean"
            },
            "encryption": {
              "description": "The bucket's encryption configuration. Structure is documented below.",
              "properties": {
                "defaultKmsKeyName": {
                  "description": ": The id of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.\nYou must pay attention to whether the crypto key is available in the location that this bucket is created in.\nSee the docs for more details.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "forceDestroy": {
              "description": "When deleting a bucket, this\nboolean option will delete all contained objects.",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of key/value label pairs to assign to the bucket.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "lifecycleRule": {
              "description": "The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.",
              "items": {
                "properties": {
                  "action": {
                    "description": "The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.",
                    "properties": {
                      "storageClass": {
                        "description": "The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of the action of this Lifecycle Rule. Supported values include: Delete, SetStorageClass and AbortIncompleteMultipartUpload.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "condition": {
                    "description": "The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.",
                    "properties": {
                      "age": {
                        "description": "Minimum age of an object in days to satisfy this condition. If not supplied alongside another condition and without setting no_age to true, a default age of 0 will be set.",
                        "type": "number"
                      },
                      "createdBefore": {
                        "description": "A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                        "type": "string"
                      },
                      "customTimeBefore": {
                        "description": "A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.",
                        "type": "string"
                      },
                      "daysSinceCustomTime": {
                        "description": "Days since the date set in the customTime metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the customTime. When set to 0 it will be ignored, and your state will treat it as though you supplied no days_since_custom_time condition.",
                        "type": "number"
                      },
                      "daysSinceNoncurrentTime": {
                        "description": "Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object. When set to 0 it will be ignored, and your state will treat it as though you supplied no days_since_noncurrent_time condition.",
                        "type": "number"
                      },
                      "matchesPrefix": {
                        "description": "One or more matching name prefixes to satisfy this condition.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "matchesStorageClass": {
                        "description": "Storage Class of objects to satisfy this condition. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "matchesSuffix": {
                        "description": "One or more matching name suffixes to satisfy this condition.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "noAge": {
                        "description": "While set true, age value will be omitted from requests. This prevents a default age of 0 from being applied, and if you do not have an age value set, setting this to true is strongly recommended. When unset and other conditions are set to zero values, this can result in a rule that applies your action to all files in the bucket. no_age is deprecated and will be removed in a future major release. Use send_age_if_zero instead.",
                        "type": "boolean"
                      },
                      "noncurrentTimeBefore": {
                        "description": "Relevant only for versioned objects. The date in RFC 3339 (e.g. 2017-06-13) when the object became nonconcurrent. When set to 0 it will be ignored, and your state will treat it as though you supplied no noncurrent_time_before condition.",
                        "type": "string"
                      },
                      "numNewerVersions": {
                        "description": "Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition. When set to 0 it will be ignored and your state will treat it as though you supplied no num_newer_versions condition.",
                        "type": "number"
                      },
                      "sendAgeIfZero": {
                        "description": "While set true, age value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the age field. It can be used alone or together with age attribute. NOTE age attibute with 0 value will be ommitted from the API request if send_age_if_zero field is having false value.",
                        "type": "boolean"
                      },
                      "sendDaysSinceCustomTimeIfZero": {
                        "description": "While set true, days_since_custom_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_custom_time field. It can be used alone or together with days_since_custom_time.",
                        "type": "boolean"
                      },
                      "sendDaysSinceNoncurrentTimeIfZero": {
                        "description": "While set true, days_since_noncurrent_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_noncurrent_time field. It can be used alone or together with days_since_noncurrent_time.",
                        "type": "boolean"
                      },
                      "sendNumNewerVersionsIfZero": {
                        "description": "While set true, num_newer_versions value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the num_newer_versions field. It can be used alone or together with num_newer_versions.",
                        "type": "boolean"
                      },
                      "withState": {
                        "description": "Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: \"LIVE\", \"ARCHIVED\", \"ANY\".",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "location": {
              "description": "The GCS location.",
              "type": "string"
            },
            "logging": {
              "description": "The bucket's Access & Storage Logs configuration. Structure is documented below.",
              "properties": {
                "logBucket": {
                  "description": "The bucket that will receive log objects.",
                  "type": "string"
                },
                "logObjectPrefix": {
                  "description": "The object prefix for log objects. If it's not provided,\nby default GCS sets this to this bucket's name.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "project": {
              "description": "The ID of the project in which the resource belongs. If it\nis not provided, the provider project is used.",
              "type": "string"
            },
            "publicAccessPrevention": {
              "description": "Prevents public access to a bucket. Acceptable values are \"inherited\" or \"enforced\". If \"inherited\", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to \"inherited\".",
              "type": "string"
            },
            "requesterPays": {
              "description": "Enables Requester Pays on a storage bucket.",
              "type": "boolean"
            },
            "retentionPolicy": {
              "description": "Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.",
              "properties": {
                "isLocked": {
                  "description": "If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.",
                  "type": "boolean"
                },
                "retentionPeriod": {
                  "description": "The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rpo": {
              "description": "The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. \"DEFAULT\" sets default replication. \"ASYNC_TURBO\" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to \"DEFAULT\" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.",
              "type": "string"
            },
            "softDeletePolicy": {
              "description": "The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.",
              "properties": {
                "retentionDurationSeconds": {
                  "description": "The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "storageClass": {
              "description": "The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
              "type": "string"
            },
            "uniformBucketLevelAccess": {
              "description": "Enables Uniform bucket-level access access to a bucket.",
              "type": "boolean"
            },
            "versioning": {
              "description": "The bucket's Versioning configuration.  Structure is documented below.",
              "properties": {
                "enabled": {
                  "description": "While set to true, versioning is fully enabled for this bucket.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "website": {
              "description": "Configuration if the bucket acts as a website. Structure is documented below.",
              "properties": {
                "mainPageSuffix": {
                  "description": "Behaves as the bucket's directory index where\nmissing objects are treated as potential directories.",
                  "type": "string"
                },
                "notFoundPage": {
                  "description": "The custom object to return when a requested\nresource is not found.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "autoclass": {
              "description": "The bucket's Autoclass configuration.  Structure is documented below.",
              "properties": {
                "enabled": {
                  "description": "While set to true, autoclass automatically transitions objects in your bucket to appropriate storage classes based on each object's access pattern.",
                  "type": "boolean"
                },
                "terminalStorageClass": {
                  "description": "The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Supported values include: NEARLINE, ARCHIVE.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "cors": {
              "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.",
              "items": {
                "properties": {
                  "maxAgeSeconds": {
                    "description": "The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.",
                    "type": "number"
                  },
                  "method": {
                    "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "origin": {
                    "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "responseHeader": {
                    "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "customPlacementConfig": {
              "description": "The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.",
              "properties": {
                "dataLocations": {
                  "description": "The list of individual regions that comprise a dual-region bucket. See Cloud Storage bucket locations for a list of acceptable regions. Note: If any of the data_locations changes, it will recreate the bucket.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "set"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "defaultEventBasedHold": {
              "description": "Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.",
              "type": "boolean"
            },
            "enableObjectRetention": {
              "description": "Enables object retention on a storage bucket.",
              "type": "boolean"
            },
            "encryption": {
              "description": "The bucket's encryption configuration. Structure is documented below.",
              "properties": {
                "defaultKmsKeyName": {
                  "description": ": The id of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.\nYou must pay attention to whether the crypto key is available in the location that this bucket is created in.\nSee the docs for more details.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "forceDestroy": {
              "description": "When deleting a bucket, this\nboolean option will delete all contained objects.",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of key/value label pairs to assign to the bucket.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "lifecycleRule": {
              "description": "The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.",
              "items": {
                "properties": {
                  "action": {
                    "description": "The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.",
                    "properties": {
                      "storageClass": {
                        "description": "The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of the action of this Lifecycle Rule. Supported values include: Delete, SetStorageClass and AbortIncompleteMultipartUpload.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "condition": {
                    "description": "The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.",
                    "properties": {
                      "age": {
                        "description": "Minimum age of an object in days to satisfy this condition. If not supplied alongside another condition and without setting no_age to true, a default age of 0 will be set.",
                        "type": "number"
                      },
                      "createdBefore": {
                        "description": "A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                        "type": "string"
                      },
                      "customTimeBefore": {
                        "description": "A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.",
                        "type": "string"
                      },
                      "daysSinceCustomTime": {
                        "description": "Days since the date set in the customTime metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the customTime. When set to 0 it will be ignored, and your state will treat it as though you supplied no days_since_custom_time condition.",
                        "type": "number"
                      },
                      "daysSinceNoncurrentTime": {
                        "description": "Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object. When set to 0 it will be ignored, and your state will treat it as though you supplied no days_since_noncurrent_time condition.",
                        "type": "number"
                      },
                      "matchesPrefix": {
                        "description": "One or more matching name prefixes to satisfy this condition.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "matchesStorageClass": {
                        "description": "Storage Class of objects to satisfy this condition. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "matchesSuffix": {
                        "description": "One or more matching name suffixes to satisfy this condition.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "noAge": {
                        "description": "While set true, age value will be omitted from requests. This prevents a default age of 0 from being applied, and if you do not have an age value set, setting this to true is strongly recommended. When unset and other conditions are set to zero values, this can result in a rule that applies your action to all files in the bucket. no_age is deprecated and will be removed in a future major release. Use send_age_if_zero instead.",
                        "type": "boolean"
                      },
                      "noncurrentTimeBefore": {
                        "description": "Relevant only for versioned objects. The date in RFC 3339 (e.g. 2017-06-13) when the object became nonconcurrent. When set to 0 it will be ignored, and your state will treat it as though you supplied no noncurrent_time_before condition.",
                        "type": "string"
                      },
                      "numNewerVersions": {
                        "description": "Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition. When set to 0 it will be ignored and your state will treat it as though you supplied no num_newer_versions condition.",
                        "type": "number"
                      },
                      "sendAgeIfZero": {
                        "description": "While set true, age value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the age field. It can be used alone or together with age attribute. NOTE age attibute with 0 value will be ommitted from the API request if send_age_if_zero field is having false value.",
                        "type": "boolean"
                      },
                      "sendDaysSinceCustomTimeIfZero": {
                        "description": "While set true, days_since_custom_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_custom_time field. It can be used alone or together with days_since_custom_time.",
                        "type": "boolean"
                      },
                      "sendDaysSinceNoncurrentTimeIfZero": {
                        "description": "While set true, days_since_noncurrent_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_noncurrent_time field. It can be used alone or together with days_since_noncurrent_time.",
                        "type": "boolean"
                      },
                      "sendNumNewerVersionsIfZero": {
                        "description": "While set true, num_newer_versions value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the num_newer_versions field. It can be used alone or together with num_newer_versions.",
                        "type": "boolean"
                      },
                      "withState": {
                        "description": "Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: \"LIVE\", \"ARCHIVED\", \"ANY\".",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "location": {
              "description": "The GCS location.",
              "type": "string"
            },
            "logging": {
              "description": "The bucket's Access & Storage Logs configuration. Structure is documented below.",
              "properties": {
                "logBucket": {
                  "description": "The bucket that will receive log objects.",
                  "type": "string"
                },
                "logObjectPrefix": {
                  "description": "The object prefix for log objects. If it's not provided,\nby default GCS sets this to this bucket's name.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "project": {
              "description": "The ID of the project in which the resource belongs. If it\nis not provided, the provider project is used.",
              "type": "string"
            },
            "publicAccessPrevention": {
              "description": "Prevents public access to a bucket. Acceptable values are \"inherited\" or \"enforced\". If \"inherited\", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to \"inherited\".",
              "type": "string"
            },
            "requesterPays": {
              "description": "Enables Requester Pays on a storage bucket.",
              "type": "boolean"
            },
            "retentionPolicy": {
              "description": "Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.",
              "properties": {
                "isLocked": {
                  "description": "If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.",
                  "type": "boolean"
                },
                "retentionPeriod": {
                  "description": "The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rpo": {
              "description": "The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. \"DEFAULT\" sets default replication. \"ASYNC_TURBO\" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to \"DEFAULT\" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.",
              "type": "string"
            },
            "softDeletePolicy": {
              "description": "The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.",
              "properties": {
                "retentionDurationSeconds": {
                  "description": "The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "storageClass": {
              "description": "The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
              "type": "string"
            },
            "uniformBucketLevelAccess": {
              "description": "Enables Uniform bucket-level access access to a bucket.",
              "type": "boolean"
            },
            "versioning": {
              "description": "The bucket's Versioning configuration.  Structure is documented below.",
              "properties": {
                "enabled": {
                  "description": "While set to true, versioning is fully enabled for this bucket.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "website": {
              "description": "Configuration if the bucket acts as a website. Structure is documented below.",
              "properties": {
                "mainPageSuffix": {
                  "description": "Behaves as the bucket's directory index where\nmissing objects are treated as potential directories.",
                  "type": "string"
                },
                "notFoundPage": {
                  "description": "The custom object to return when a requested\nresource is not found.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.location is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "BucketStatus defines the observed state of Bucket.",
      "properties": {
        "atProvider": {
          "properties": {
            "autoclass": {
              "description": "The bucket's Autoclass configuration.  Structure is documented below.",
              "properties": {
                "enabled": {
                  "description": "While set to true, autoclass automatically transitions objects in your bucket to appropriate storage classes based on each object's access pattern.",
                  "type": "boolean"
                },
                "terminalStorageClass": {
                  "description": "The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Supported values include: NEARLINE, ARCHIVE.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "cors": {
              "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.",
              "items": {
                "properties": {
                  "maxAgeSeconds": {
                    "description": "The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.",
                    "type": "number"
                  },
                  "method": {
                    "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "origin": {
                    "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "responseHeader": {
                    "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "customPlacementConfig": {
              "description": "The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.",
              "properties": {
                "dataLocations": {
                  "description": "The list of individual regions that comprise a dual-region bucket. See Cloud Storage bucket locations for a list of acceptable regions. Note: If any of the data_locations changes, it will recreate the bucket.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "set"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "defaultEventBasedHold": {
              "description": "Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.",
              "type": "boolean"
            },
            "effectiveLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of key/value label pairs to assign to the bucket.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "enableObjectRetention": {
              "description": "Enables object retention on a storage bucket.",
              "type": "boolean"
            },
            "encryption": {
              "description": "The bucket's encryption configuration. Structure is documented below.",
              "properties": {
                "defaultKmsKeyName": {
                  "description": ": The id of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.\nYou must pay attention to whether the crypto key is available in the location that this bucket is created in.\nSee the docs for more details.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "forceDestroy": {
              "description": "When deleting a bucket, this\nboolean option will delete all contained objects.",
              "type": "boolean"
            },
            "id": {
              "type": "string"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of key/value label pairs to assign to the bucket.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "lifecycleRule": {
              "description": "The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.",
              "items": {
                "properties": {
                  "action": {
                    "description": "The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.",
                    "properties": {
                      "storageClass": {
                        "description": "The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of the action of this Lifecycle Rule. Supported values include: Delete, SetStorageClass and AbortIncompleteMultipartUpload.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "condition": {
                    "description": "The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.",
                    "properties": {
                      "age": {
                        "description": "Minimum age of an object in days to satisfy this condition. If not supplied alongside another condition and without setting no_age to true, a default age of 0 will be set.",
                        "type": "number"
                      },
                      "createdBefore": {
                        "description": "A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                        "type": "string"
                      },
                      "customTimeBefore": {
                        "description": "A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.",
                        "type": "string"
                      },
                      "daysSinceCustomTime": {
                        "description": "Days since the date set in the customTime metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the customTime. When set to 0 it will be ignored, and your state will treat it as though you supplied no days_since_custom_time condition.",
                        "type": "number"
                      },
                      "daysSinceNoncurrentTime": {
                        "description": "Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object. When set to 0 it will be ignored, and your state will treat it as though you supplied no days_since_noncurrent_time condition.",
                        "type": "number"
                      },
                      "matchesPrefix": {
                        "description": "One or more matching name prefixes to satisfy this condition.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "matchesStorageClass": {
                        "description": "Storage Class of objects to satisfy this condition. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "matchesSuffix": {
                        "description": "One or more matching name suffixes to satisfy this condition.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "noAge": {
                        "description": "While set true, age value will be omitted from requests. This prevents a default age of 0 from being applied, and if you do not have an age value set, setting this to true is strongly recommended. When unset and other conditions are set to zero values, this can result in a rule that applies your action to all files in the bucket. no_age is deprecated and will be removed in a future major release. Use send_age_if_zero instead.",
                        "type": "boolean"
                      },
                      "noncurrentTimeBefore": {
                        "description": "Relevant only for versioned objects. The date in RFC 3339 (e.g. 2017-06-13) when the object became nonconcurrent. When set to 0 it will be ignored, and your state will treat it as though you supplied no noncurrent_time_before condition.",
                        "type": "string"
                      },
                      "numNewerVersions": {
                        "description": "Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition. When set to 0 it will be ignored and your state will treat it as though you supplied no num_newer_versions condition.",
                        "type": "number"
                      },
                      "sendAgeIfZero": {
                        "description": "While set true, age value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the age field. It can be used alone or together with age attribute. NOTE age attibute with 0 value will be ommitted from the API request if send_age_if_zero field is having false value.",
                        "type": "boolean"
                      },
                      "sendDaysSinceCustomTimeIfZero": {
                        "description": "While set true, days_since_custom_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_custom_time field. It can be used alone or together with days_since_custom_time.",
                        "type": "boolean"
                      },
                      "sendDaysSinceNoncurrentTimeIfZero": {
                        "description": "While set true, days_since_noncurrent_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_noncurrent_time field. It can be used alone or together with days_since_noncurrent_time.",
                        "type": "boolean"
                      },
                      "sendNumNewerVersionsIfZero": {
                        "description": "While set true, num_newer_versions value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the num_newer_versions field. It can be used alone or together with num_newer_versions.",
                        "type": "boolean"
                      },
                      "withState": {
                        "description": "Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: \"LIVE\", \"ARCHIVED\", \"ANY\".",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "location": {
              "description": "The GCS location.",
              "type": "string"
            },
            "logging": {
              "description": "The bucket's Access & Storage Logs configuration. Structure is documented below.",
              "properties": {
                "logBucket": {
                  "description": "The bucket that will receive log objects.",
                  "type": "string"
                },
                "logObjectPrefix": {
                  "description": "The object prefix for log objects. If it's not provided,\nby default GCS sets this to this bucket's name.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "project": {
              "description": "The ID of the project in which the resource belongs. If it\nis not provided, the provider project is used.",
              "type": "string"
            },
            "projectNumber": {
              "type": "number"
            },
            "publicAccessPrevention": {
              "description": "Prevents public access to a bucket. Acceptable values are \"inherited\" or \"enforced\". If \"inherited\", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to \"inherited\".",
              "type": "string"
            },
            "requesterPays": {
              "description": "Enables Requester Pays on a storage bucket.",
              "type": "boolean"
            },
            "retentionPolicy": {
              "description": "Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.",
              "properties": {
                "isLocked": {
                  "description": "If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.",
                  "type": "boolean"
                },
                "retentionPeriod": {
                  "description": "The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rpo": {
              "description": "The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. \"DEFAULT\" sets default replication. \"ASYNC_TURBO\" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to \"DEFAULT\" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.",
              "type": "string"
            },
            "selfLink": {
              "description": "The URI of the created resource.",
              "type": "string"
            },
            "softDeletePolicy": {
              "description": "The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.",
              "properties": {
                "effectiveTime": {
                  "description": "(Computed) Server-determined value that indicates the time from which the policy, or one with a greater retention, was effective. This value is in RFC 3339 format.",
                  "type": "string"
                },
                "retentionDurationSeconds": {
                  "description": "The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "storageClass": {
              "description": "The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
              "type": "string"
            },
            "terraformLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of key/value label pairs to assign to the bucket.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "uniformBucketLevelAccess": {
              "description": "Enables Uniform bucket-level access access to a bucket.",
              "type": "boolean"
            },
            "url": {
              "description": "The base URL of the bucket, in the format gs://<bucket-name>.",
              "type": "string"
            },
            "versioning": {
              "description": "The bucket's Versioning configuration.  Structure is documented below.",
              "properties": {
                "enabled": {
                  "description": "While set to true, versioning is fully enabled for this bucket.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "website": {
              "description": "Configuration if the bucket acts as a website. Structure is documented below.",
              "properties": {
                "mainPageSuffix": {
                  "description": "Behaves as the bucket's directory index where\nmissing objects are treated as potential directories.",
                  "type": "string"
                },
                "notFoundPage": {
                  "description": "The custom object to return when a requested\nresource is not found.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
